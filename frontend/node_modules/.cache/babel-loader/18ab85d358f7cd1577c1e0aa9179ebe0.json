{"ast":null,"code":"import { coins } from \"../../config\";\nexport function formatAddress(wallet) {\n  return ellideMiddle(wallet, 24);\n}\nexport function ellideMiddle(str, maxOutLen) {\n  if (str.length <= maxOutLen) {\n    return str;\n  }\n\n  const ellide = \"…\";\n  const frontLen = Math.ceil((maxOutLen - ellide.length) / 2);\n  const tailLen = Math.floor((maxOutLen - ellide.length) / 2);\n  return str.slice(0, frontLen) + ellide + str.slice(str.length - tailLen, str.length);\n}\nexport function getTokenConfig(denom) {\n  return coins.find(c => c.denom === denom);\n}\nexport function formatPrice(price) {\n  const coin = getTokenConfig(price.denom);\n  const amount = parseInt(price.amount) / Math.pow(10, coin.decimals);\n  return amount + \" \" + coin.name;\n}\nexport function toMinDenom(amount, denom) {\n  const coin = getTokenConfig(denom);\n  return Math.ceil(amount * Math.pow(10, coin.decimals)).toString();\n}","map":{"version":3,"sources":["/Users/pauloponciano/Documents/cosmverse/src/App/services/utils.ts"],"names":["coins","formatAddress","wallet","ellideMiddle","str","maxOutLen","length","ellide","frontLen","Math","ceil","tailLen","floor","slice","getTokenConfig","denom","find","c","formatPrice","price","coin","amount","parseInt","pow","decimals","name","toMinDenom","toString"],"mappings":"AAAA,SAASA,KAAT,QAA6B,cAA7B;AAEA,OAAO,SAASC,aAAT,CAAuBC,MAAvB,EAA+C;AACpD,SAAOC,YAAY,CAACD,MAAD,EAAS,EAAT,CAAnB;AACD;AAED,OAAO,SAASC,YAAT,CAAsBC,GAAtB,EAAmCC,SAAnC,EAA8D;AACnE,MAAID,GAAG,CAACE,MAAJ,IAAcD,SAAlB,EAA6B;AAC3B,WAAOD,GAAP;AACD;;AACD,QAAMG,MAAM,GAAG,GAAf;AACA,QAAMC,QAAQ,GAAGC,IAAI,CAACC,IAAL,CAAU,CAACL,SAAS,GAAGE,MAAM,CAACD,MAApB,IAA8B,CAAxC,CAAjB;AACA,QAAMK,OAAO,GAAGF,IAAI,CAACG,KAAL,CAAW,CAACP,SAAS,GAAGE,MAAM,CAACD,MAApB,IAA8B,CAAzC,CAAhB;AACA,SAAOF,GAAG,CAACS,KAAJ,CAAU,CAAV,EAAaL,QAAb,IAAyBD,MAAzB,GAAkCH,GAAG,CAACS,KAAJ,CAAUT,GAAG,CAACE,MAAJ,GAAaK,OAAvB,EAAgCP,GAAG,CAACE,MAApC,CAAzC;AACD;AAED,OAAO,SAASQ,cAAT,CAAwBC,KAAxB,EAAwD;AAC7D,SAAOf,KAAK,CAACgB,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACF,KAAF,KAAYA,KAA5B,CAAP;AACD;AAED,OAAO,SAASG,WAAT,CAAqBC,KAArB,EAAqE;AAC1E,QAAMC,IAAI,GAAGN,cAAc,CAACK,KAAK,CAACJ,KAAP,CAA3B;AACA,QAAMM,MAAM,GAAGC,QAAQ,CAACH,KAAK,CAACE,MAAP,CAAR,GAAyBZ,IAAI,CAACc,GAAL,CAAS,EAAT,EAAaH,IAAI,CAACI,QAAlB,CAAxC;AAEA,SAAOH,MAAM,GAAG,GAAT,GAAeD,IAAI,CAACK,IAA3B;AACD;AAED,OAAO,SAASC,UAAT,CAAoBL,MAApB,EAAoCN,KAApC,EAA2D;AAChE,QAAMK,IAAI,GAAGN,cAAc,CAACC,KAAD,CAA3B;AACA,SAAON,IAAI,CAACC,IAAL,CAAUW,MAAM,GAAGZ,IAAI,CAACc,GAAL,CAAS,EAAT,EAAaH,IAAI,CAACI,QAAlB,CAAnB,EAAgDG,QAAhD,EAAP;AACD","sourcesContent":["import { coins, Token } from \"../../config\";\n\nexport function formatAddress(wallet: string): string {\n  return ellideMiddle(wallet, 24);\n}\n\nexport function ellideMiddle(str: string, maxOutLen: number): string {\n  if (str.length <= maxOutLen) {\n    return str;\n  }\n  const ellide = \"…\";\n  const frontLen = Math.ceil((maxOutLen - ellide.length) / 2);\n  const tailLen = Math.floor((maxOutLen - ellide.length) / 2);\n  return str.slice(0, frontLen) + ellide + str.slice(str.length - tailLen, str.length);\n}\n\nexport function getTokenConfig(denom: string): Token|undefined {\n  return coins.find(c => c.denom === denom);\n}\n\nexport function formatPrice(price: {amount: string, denom: string}): string {\n  const coin = getTokenConfig(price.denom)!;\n  const amount = parseInt(price.amount) / Math.pow(10, coin.decimals);\n\n  return amount + \" \" + coin.name;\n}\n\nexport function toMinDenom(amount: number, denom: string): string {\n  const coin = getTokenConfig(denom)!;\n  return Math.ceil(amount * Math.pow(10, coin.decimals)).toString();\n}\n"]},"metadata":{},"sourceType":"module"}