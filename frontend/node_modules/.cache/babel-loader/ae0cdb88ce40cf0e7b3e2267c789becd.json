{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/pauloponciano/Documents/cosmverse/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/pauloponciano/Documents/cosmverse/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.setupSupplyExtension = void 0;\n\nfunction setupSupplyExtension(base) {\n  return {\n    supply: {\n      totalAll: function () {\n        var _totalAll = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  return _context.abrupt(\"return\", base.get(\"/supply/total\"));\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        function totalAll() {\n          return _totalAll.apply(this, arguments);\n        }\n\n        return totalAll;\n      }(),\n      total: function () {\n        var _total = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(denom) {\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  return _context2.abrupt(\"return\", base.get(\"/supply/total/\".concat(denom)));\n\n                case 1:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        function total(_x) {\n          return _total.apply(this, arguments);\n        }\n\n        return total;\n      }()\n    }\n  };\n}\n\nexports.setupSupplyExtension = setupSupplyExtension;","map":null,"metadata":{},"sourceType":"script"}