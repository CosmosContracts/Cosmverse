{"ast":null,"code":"\"use strict\";\n\nvar _createForOfIteratorHelper = require(\"/Users/pauloponciano/Documents/cosmverse/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.fromHex = exports.toHex = void 0;\n\nfunction toHex(data) {\n  var out = \"\";\n\n  var _iterator = _createForOfIteratorHelper(data),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var byte = _step.value;\n      out += (\"0\" + byte.toString(16)).slice(-2);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return out;\n}\n\nexports.toHex = toHex;\n\nfunction fromHex(hexstring) {\n  if (hexstring.length % 2 !== 0) {\n    throw new Error(\"hex string length must be a multiple of 2\");\n  }\n\n  var listOfInts = [];\n\n  for (var i = 0; i < hexstring.length; i += 2) {\n    var hexByteAsString = hexstring.substr(i, 2);\n\n    if (!hexByteAsString.match(/[0-9a-f]{2}/i)) {\n      throw new Error(\"hex string contains invalid characters\");\n    }\n\n    listOfInts.push(parseInt(hexByteAsString, 16));\n  }\n\n  return new Uint8Array(listOfInts);\n}\n\nexports.fromHex = fromHex;","map":null,"metadata":{},"sourceType":"script"}