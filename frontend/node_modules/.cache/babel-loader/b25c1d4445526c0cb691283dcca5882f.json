{"ast":null,"code":"var _jsxFileName = \"/Users/pauloponciano/Documents/cosmverse/src/App/components/pagination/index.tsx\",\n    _s2 = $RefreshSig$();\n\nimport * as React from \"react\";\nimport { chakra, Flex, Icon, useColorModeValue } from '@chakra-ui/react';\nimport { useCallback, useEffect, useState } from \"react\";\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@chakra-ui/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Pagination(_ref) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let {\n    step,\n    total,\n    onChangePage\n  } = _ref;\n  const [previous, setPrevious] = useState();\n  const [next, setNext] = useState();\n  const [currentPage, setPage] = useState(1);\n\n  const PagButton = props => {\n    _s();\n\n    const activeStyle = {\n      bg: useColorModeValue(\"cyan.900\", \"cyan.900\")\n    };\n    return /*#__PURE__*/_jsxDEV(chakra.button, {\n      mx: 1,\n      px: 4,\n      py: 2,\n      rounded: \"50px\",\n      onClick: props.onClick,\n      color: useColorModeValue(\"cyan.900\", \"white.200\"),\n      fontWeight: \"semibold\",\n      fontSize: \"md\",\n      opacity: props.disabled && 0.6,\n      _hover: !props.disabled && activeStyle,\n      disabled: props.disabled,\n      cursor: props.disabled && \"not-allowed\",\n      ...(props.active && activeStyle),\n      display: props.p && !props.active && {\n        base: \"none\",\n        sm: \"block\"\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  };\n\n  _s(PagButton, \"5rxRexUsrrZIvnjV+vC1pFVSBPE=\", false, function () {\n    return [useColorModeValue, useColorModeValue];\n  });\n\n  const getValidPages = useCallback(page => {\n    const pages = Math.ceil(total / step);\n\n    if (page <= 1) {\n      page = 1;\n    } else if (page >= pages) {\n      page = pages;\n    }\n\n    return [page, pages];\n  }, [total, step]);\n  const calculatePage = useCallback(pageNum => {\n    const [pageVal, pages] = getValidPages(pageNum);\n    setPrevious(pageVal > 1);\n    setNext(pageVal < pages);\n    setPage(pageVal);\n    return pageVal;\n  }, [getValidPages]);\n  useEffect(() => {\n    calculatePage(currentPage);\n  }, [calculatePage, currentPage]);\n\n  const handleStep = page => {\n    const validPage = calculatePage(page);\n    onChangePage(validPage);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    p: 50,\n    w: \"full\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      children: [/*#__PURE__*/_jsxDEV(PagButton, {\n        disabled: !previous,\n        onClick: () => handleStep(currentPage - 1),\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          as: ChevronLeftIcon,\n          boxSize: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), \" Previous\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PagButton, {\n        disabled: !next,\n        onClick: () => handleStep(currentPage + 1),\n        children: [\"Next\", /*#__PURE__*/_jsxDEV(Icon, {\n          as: ChevronRightIcon,\n          boxSize: 4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Pagination, \"sQIORFnj8Z3uUjJjpSZMvmkL+5Q=\");\n\n_c = Pagination;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/Users/pauloponciano/Documents/cosmverse/src/App/components/pagination/index.tsx"],"names":["React","chakra","Flex","Icon","useColorModeValue","useCallback","useEffect","useState","ChevronLeftIcon","ChevronRightIcon","Pagination","step","total","onChangePage","previous","setPrevious","next","setNext","currentPage","setPage","PagButton","props","activeStyle","bg","onClick","disabled","active","p","base","sm","children","getValidPages","page","pages","Math","ceil","calculatePage","pageNum","pageVal","handleStep","validPage"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,iBAJF,QAKO,kBALP;AAMA,SAASC,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,eAAT,EAA0BC,gBAA1B,QAAkD,kBAAlD;;AAQA,OAAO,SAASC,UAAT,OAI0B;AAAA;;AAAA;;AAAA,MAJN;AACzBC,IAAAA,IADyB;AAEzBC,IAAAA,KAFyB;AAGzBC,IAAAA;AAHyB,GAIM;AAC/B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,EAAxC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,EAAhC;AACA,QAAM,CAACW,WAAD,EAAcC,OAAd,IAAyBZ,QAAQ,CAAS,CAAT,CAAvC;;AAEA,QAAMa,SAAS,GAAIC,KAAD,IAAgB;AAAA;;AAChC,UAAMC,WAAW,GAAG;AAClBC,MAAAA,EAAE,EAAEnB,iBAAiB,CAAC,UAAD,EAAa,UAAb;AADH,KAApB;AAGA,wBACE,QAAC,MAAD,CAAQ,MAAR;AACE,MAAA,EAAE,EAAE,CADN;AAEE,MAAA,EAAE,EAAE,CAFN;AAGE,MAAA,EAAE,EAAE,CAHN;AAIE,MAAA,OAAO,EAAC,MAJV;AAKE,MAAA,OAAO,EAAEiB,KAAK,CAACG,OALjB;AAME,MAAA,KAAK,EAAEpB,iBAAiB,CAAC,UAAD,EAAa,WAAb,CAN1B;AAOE,MAAA,UAAU,EAAC,UAPb;AAQE,MAAA,QAAQ,EAAC,IARX;AASE,MAAA,OAAO,EAAEiB,KAAK,CAACI,QAAN,IAAkB,GAT7B;AAUE,MAAA,MAAM,EAAE,CAACJ,KAAK,CAACI,QAAP,IAAmBH,WAV7B;AAWE,MAAA,QAAQ,EAAED,KAAK,CAACI,QAXlB;AAYE,MAAA,MAAM,EAAEJ,KAAK,CAACI,QAAN,IAAkB,aAZ5B;AAAA,UAaOJ,KAAK,CAACK,MAAN,IAAgBJ,WAbvB;AAcE,MAAA,OAAO,EAAED,KAAK,CAACM,CAAN,IAAW,CAACN,KAAK,CAACK,MAAlB,IAA4B;AAAEE,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,EAAE,EAAE;AAApB,OAdvC;AAAA,gBAgBGR,KAAK,CAACS;AAhBT;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD,GAxBD;;AAL+B,KAKzBV,SALyB;AAAA,YAOvBhB,iBAPuB,EAgBlBA,iBAhBkB;AAAA;;AA+B/B,QAAM2B,aAAa,GAAG1B,WAAW,CAAE2B,IAAD,IAAkB;AAClD,UAAMC,KAAK,GAAGC,IAAI,CAACC,IAAL,CAAUvB,KAAK,GAAGD,IAAlB,CAAd;;AAEA,QAAIqB,IAAI,IAAI,CAAZ,EAAe;AACbA,MAAAA,IAAI,GAAG,CAAP;AACD,KAFD,MAEO,IAAIA,IAAI,IAAIC,KAAZ,EAAmB;AACxBD,MAAAA,IAAI,GAAGC,KAAP;AACD;;AAED,WAAO,CAACD,IAAD,EAAOC,KAAP,CAAP;AACD,GAVgC,EAU9B,CAACrB,KAAD,EAAQD,IAAR,CAV8B,CAAjC;AAYA,QAAMyB,aAAa,GAAG/B,WAAW,CAAEgC,OAAD,IAAqB;AACrD,UAAM,CAACC,OAAD,EAAUL,KAAV,IAAmBF,aAAa,CAACM,OAAD,CAAtC;AACAtB,IAAAA,WAAW,CAACuB,OAAO,GAAG,CAAX,CAAX;AACArB,IAAAA,OAAO,CAACqB,OAAO,GAAGL,KAAX,CAAP;AACAd,IAAAA,OAAO,CAACmB,OAAD,CAAP;AAEA,WAAOA,OAAP;AACD,GAPgC,EAO9B,CAACP,aAAD,CAP8B,CAAjC;AASAzB,EAAAA,SAAS,CAAC,MAAM;AACd8B,IAAAA,aAAa,CAAClB,WAAD,CAAb;AACD,GAFQ,EAEN,CAACkB,aAAD,EAAgBlB,WAAhB,CAFM,CAAT;;AAIA,QAAMqB,UAAU,GAAIP,IAAD,IAAkB;AACnC,UAAMQ,SAAS,GAAGJ,aAAa,CAACJ,IAAD,CAA/B;AACAnB,IAAAA,YAAY,CAAC2B,SAAD,CAAZ;AACD,GAHD;;AAKA,sBACE,QAAC,IAAD;AACE,IAAA,CAAC,EAAE,EADL;AAEE,IAAA,CAAC,EAAC,MAFJ;AAGE,IAAA,UAAU,EAAC,QAHb;AAIE,IAAA,cAAc,EAAC,QAJjB;AAAA,2BAME,QAAC,IAAD;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAE,CAAC1B,QAAtB;AAAgC,QAAA,OAAO,EAAE,MAAMyB,UAAU,CAACrB,WAAW,GAAG,CAAf,CAAzD;AAAA,gCACE,QAAC,IAAD;AACE,UAAA,EAAE,EAAEV,eADN;AAEE,UAAA,OAAO,EAAE;AAFX;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAE,CAACQ,IAAtB;AAA4B,QAAA,OAAO,EAAE,MAAMuB,UAAU,CAACrB,WAAW,GAAG,CAAf,CAArD;AAAA,wCAEE,QAAC,IAAD;AACE,UAAA,EAAE,EAAET,gBADN;AAEE,UAAA,OAAO,EAAE;AAFX;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;;IAzFeC,U;;KAAAA,U;AAyFf","sourcesContent":["import * as React from \"react\";\nimport {\n  chakra,\n  Flex,\n  Icon,\n  useColorModeValue,\n} from '@chakra-ui/react';\nimport { useCallback, useEffect, useState } from \"react\";\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@chakra-ui/icons\";\n\ninterface PaginationProps {\n  readonly step: number;\n  readonly total: number;\n  readonly onChangePage: (page: number) => void;\n}\n\nexport function Pagination({\n  step,\n  total,\n  onChangePage,\n}: PaginationProps): JSX.Element {\n  const [previous, setPrevious] = useState<boolean>();\n  const [next, setNext] = useState<boolean>();\n  const [currentPage, setPage] = useState<number>(1);\n\n  const PagButton = (props: any) => {\n    const activeStyle = {\n      bg: useColorModeValue(\"cyan.900\", \"cyan.900\"),\n    };\n    return (\n      <chakra.button\n        mx={1}\n        px={4}\n        py={2}\n        rounded=\"50px\"\n        onClick={props.onClick}\n        color={useColorModeValue(\"cyan.900\", \"white.200\")}\n        fontWeight=\"semibold\"\n        fontSize=\"md\"\n        opacity={props.disabled && 0.6}\n        _hover={!props.disabled && activeStyle}\n        disabled={props.disabled}\n        cursor={props.disabled && \"not-allowed\"}\n        {...(props.active && activeStyle)}\n        display={props.p && !props.active && { base: \"none\", sm: \"block\" }}\n      >\n        {props.children}\n      </chakra.button>\n    );\n  };\n\n  const getValidPages = useCallback((page: number) => {\n    const pages = Math.ceil(total / step);\n\n    if (page <= 1) {\n      page = 1;\n    } else if (page >= pages) {\n      page = pages;\n    }\n\n    return [page, pages];\n  }, [total, step]);\n\n  const calculatePage = useCallback((pageNum: number) => {\n    const [pageVal, pages] = getValidPages(pageNum);\n    setPrevious(pageVal > 1)\n    setNext(pageVal < pages);\n    setPage(pageVal);\n\n    return pageVal;\n  }, [getValidPages]);\n\n  useEffect(() => {\n    calculatePage(currentPage);\n  }, [calculatePage, currentPage]);\n\n  const handleStep = (page: number) => {\n    const validPage = calculatePage(page);\n    onChangePage(validPage);\n  };\n\n  return (\n    <Flex\n      p={50}\n      w=\"full\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <Flex>\n        <PagButton disabled={!previous} onClick={() => handleStep(currentPage - 1)}>\n          <Icon\n            as={ChevronLeftIcon}\n            boxSize={4}\n          /> Previous\n        </PagButton>\n        <PagButton disabled={!next} onClick={() => handleStep(currentPage + 1)}>\n          Next\n          <Icon\n            as={ChevronRightIcon}\n            boxSize={4}\n          />\n        </PagButton>\n      </Flex>\n    </Flex>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}