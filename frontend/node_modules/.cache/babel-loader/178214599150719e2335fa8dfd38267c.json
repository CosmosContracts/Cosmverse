{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Cw1CosmWasmClient = void 0;\n\nconst signingcosmwasmclient_1 = require(\"./signingcosmwasmclient\");\n\nclass Cw1CosmWasmClient extends signingcosmwasmclient_1.SigningCosmWasmClient {\n  constructor(apiUrl, signerAddress, signer, cw1ContractAddress, gasPrice, gasLimits, broadcastMode) {\n    super(apiUrl, signerAddress, signer, gasPrice, gasLimits, broadcastMode);\n    this.cw1ContractAddress = cw1ContractAddress;\n  }\n\n  async getAccount(address) {\n    return super.getAccount(address || this.cw1ContractAddress);\n  }\n\n  async canSend(msg) {\n    let address = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.signerAddress;\n    const result = await this.queryContractSmart(this.cw1ContractAddress, {\n      can_send: {\n        sender: address,\n        msg: msg\n      }\n    });\n    return result.can_send;\n  }\n\n  async executeCw1(msgs) {\n    let memo = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    const handleMsg = {\n      execute: {\n        msgs: msgs\n      }\n    };\n    return this.execute(this.cw1ContractAddress, handleMsg, memo);\n  }\n\n}\n\nexports.Cw1CosmWasmClient = Cw1CosmWasmClient;","map":{"version":3,"sources":["../src/cw1cosmwasmclient.ts"],"names":[],"mappings":";;;;;;;AAIA,MAAA,uBAAA,GAAA,OAAA,CAAA,yBAAA,CAAA;;AAEA,MAAa,iBAAb,SAAuC,uBAAA,CAAA,qBAAvC,CAA4D;AAG1D,EAAA,WAAA,CACE,MADF,EAEE,aAFF,EAGE,MAHF,EAIE,kBAJF,EAKE,QALF,EAME,SANF,EAOE,aAPF,EAO+B;AAE7B,UAAM,MAAN,EAAc,aAAd,EAA6B,MAA7B,EAAqC,QAArC,EAA+C,SAA/C,EAA0D,aAA1D;AACA,SAAK,kBAAL,GAA0B,kBAA1B;AACD;;AAEsB,QAAV,UAAU,CAAC,OAAD,EAAiB;AACtC,WAAO,MAAM,UAAN,CAAiB,OAAO,IAAI,KAAK,kBAAjC,CAAP;AACD;;AAEmB,QAAP,OAAO,CAAC,GAAD,EAA6C;AAAA,QAA5B,OAA4B,uEAAlB,KAAK,aAAa;AAC/D,UAAM,MAAM,GAAG,MAAM,KAAK,kBAAL,CAAwB,KAAK,kBAA7B,EAAiD;AACpE,MAAA,QAAQ,EAAE;AACR,QAAA,MAAM,EAAE,OADA;AAER,QAAA,GAAG,EAAE;AAFG;AAD0D,KAAjD,CAArB;AAMA,WAAO,MAAM,CAAC,QAAd;AACD;;AAEsB,QAAV,UAAU,CAAC,IAAD,EAAsC;AAAA,QAAT,IAAS,uEAAF,EAAE;AAC3D,UAAM,SAAS,GAAG;AAChB,MAAA,OAAO,EAAE;AACP,QAAA,IAAI,EAAE;AADC;AADO,KAAlB;AAKA,WAAO,KAAK,OAAL,CAAa,KAAK,kBAAlB,EAAsC,SAAtC,EAAiD,IAAjD,CAAP;AACD;;AArCyD;;AAA5D,OAAA,CAAA,iBAAA,GAAA,iBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Cw1CosmWasmClient = void 0;\nconst signingcosmwasmclient_1 = require(\"./signingcosmwasmclient\");\nclass Cw1CosmWasmClient extends signingcosmwasmclient_1.SigningCosmWasmClient {\n    constructor(apiUrl, signerAddress, signer, cw1ContractAddress, gasPrice, gasLimits, broadcastMode) {\n        super(apiUrl, signerAddress, signer, gasPrice, gasLimits, broadcastMode);\n        this.cw1ContractAddress = cw1ContractAddress;\n    }\n    async getAccount(address) {\n        return super.getAccount(address || this.cw1ContractAddress);\n    }\n    async canSend(msg, address = this.signerAddress) {\n        const result = await this.queryContractSmart(this.cw1ContractAddress, {\n            can_send: {\n                sender: address,\n                msg: msg,\n            },\n        });\n        return result.can_send;\n    }\n    async executeCw1(msgs, memo = \"\") {\n        const handleMsg = {\n            execute: {\n                msgs: msgs,\n            },\n        };\n        return this.execute(this.cw1ContractAddress, handleMsg, memo);\n    }\n}\nexports.Cw1CosmWasmClient = Cw1CosmWasmClient;\n//# sourceMappingURL=cw1cosmwasmclient.js.map"]},"metadata":{},"sourceType":"script"}