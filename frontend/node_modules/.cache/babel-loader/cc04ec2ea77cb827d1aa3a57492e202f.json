{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PrivKey = exports.PubKey = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nvar long_1 = __importDefault(require(\"long\"));\n\nvar minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nexports.protobufPackage = \"cosmos.crypto.secp256k1\";\nvar basePubKey = {};\nexports.PubKey = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, basePubKey);\n    message.key = new Uint8Array();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, basePubKey);\n    message.key = new Uint8Array();\n\n    if (object.key !== undefined && object.key !== null) {\n      message.key = bytesFromBase64(object.key);\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, basePubKey);\n\n    if (object.key !== undefined && object.key !== null) {\n      message.key = object.key;\n    } else {\n      message.key = new Uint8Array();\n    }\n\n    return message;\n  }\n};\nvar basePrivKey = {};\nexports.PrivKey = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.key.length !== 0) {\n      writer.uint32(10).bytes(message.key);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, basePrivKey);\n    message.key = new Uint8Array();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.key = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, basePrivKey);\n    message.key = new Uint8Array();\n\n    if (object.key !== undefined && object.key !== null) {\n      message.key = bytesFromBase64(object.key);\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.key !== undefined && (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, basePrivKey);\n\n    if (object.key !== undefined && object.key !== null) {\n      message.key = object.key;\n    } else {\n      message.key = new Uint8Array();\n    }\n\n    return message;\n  }\n};\n\nvar globalThis = function () {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n}();\n\nvar atob = globalThis.atob || function (b64) {\n  return globalThis.Buffer.from(b64, \"base64\").toString(\"binary\");\n};\n\nfunction bytesFromBase64(b64) {\n  var bin = atob(b64);\n  var arr = new Uint8Array(bin.length);\n\n  for (var i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return arr;\n}\n\nvar btoa = globalThis.btoa || function (bin) {\n  return globalThis.Buffer.from(bin, \"binary\").toString(\"base64\");\n};\n\nfunction base64FromBytes(arr) {\n  var bin = [];\n\n  for (var i = 0; i < arr.byteLength; ++i) {\n    bin.push(String.fromCharCode(arr[i]));\n  }\n\n  return btoa(bin.join(\"\"));\n}\n\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":null,"metadata":{},"sourceType":"script"}