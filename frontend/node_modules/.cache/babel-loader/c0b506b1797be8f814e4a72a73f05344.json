{"ast":null,"code":"var _jsxFileName = \"/Users/pauloponciano/Documents/cosmverse/src/App/oldFrontend/components/nft-card/index.tsx\";\nimport * as React from \"react\";\nimport { Box, Divider, Flex, Image, Text, chakra } from \"@chakra-ui/react\";\nimport cosmverseLogo from \"../../assets/cosmverse.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NftCard(_ref) {\n  let {\n    nft\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    w: \"full\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      w: \"full\",\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        bgGradient: \"linear(to-r, green.200, pink.500)\",\n        roundedTop: \"lg\",\n        h: 56,\n        w: \"full\",\n        fit: \"cover\",\n        src: nft.image,\n        fallbackSrc: cosmverseLogo,\n        alt: nft.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        px: 4,\n        bg: \"gray.500\",\n        roundedBottom: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          py: 2,\n          children: [/*#__PURE__*/_jsxDEV(chakra.p, {\n            mt: 1,\n            fontSize: \"xs\",\n            color: \"gray.200\",\n            children: [\"@\", nft.user]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(chakra.h1, {\n            color: \"white\",\n            fontWeight: \"bold\",\n            fontSize: \"2xl\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n            title: nft.title,\n            children: nft.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(chakra.p, {\n            mt: 1,\n            fontSize: \"xs\",\n            color: \"white\",\n            children: nft.total === 1 ? \"One edition\" : `${nft.total} editions`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          py: 4,\n          color: \"white\",\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"xs\",\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(chakra.h1, {\n            fontWeight: \"semibold\",\n            fontSize: \"sm\",\n            children: nft.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_c = NftCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"NftCard\");","map":{"version":3,"sources":["/Users/pauloponciano/Documents/cosmverse/src/App/oldFrontend/components/nft-card/index.tsx"],"names":["React","Box","Divider","Flex","Image","Text","chakra","cosmverseLogo","NftCard","nft","image","title","user","total","price"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SACEC,GADF,EAEEC,OAFF,EAGEC,IAHF,EAIEC,KAJF,EAKEC,IALF,EAMEC,MANF,QAOO,kBAPP;AAUA,OAAOC,aAAP,MAA0B,4BAA1B;;AAMA,OAAO,SAASC,OAAT,OAAqD;AAAA,MAApC;AAAEC,IAAAA;AAAF,GAAoC;AAC1D,sBACE,QAAC,IAAD;AACE,IAAA,CAAC,EAAC,MADJ;AAEE,IAAA,UAAU,EAAC,QAFb;AAGE,IAAA,cAAc,EAAC,QAHjB;AAAA,2BAKE,QAAC,GAAD;AAAK,MAAA,CAAC,EAAC,MAAP;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,UAAU,EAAC,mCADb;AAEE,QAAA,UAAU,EAAC,IAFb;AAGE,QAAA,CAAC,EAAE,EAHL;AAIE,QAAA,CAAC,EAAC,MAJJ;AAKE,QAAA,GAAG,EAAC,OALN;AAME,QAAA,GAAG,EAAEA,GAAG,CAACC,KANX;AAOE,QAAA,WAAW,EAAEH,aAPf;AAQE,QAAA,GAAG,EAAEE,GAAG,CAACE;AARX;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAC,UAAf;AAA0B,QAAA,aAAa,EAAC,IAAxC;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,kCACE,QAAC,MAAD,CAAQ,CAAR;AACE,YAAA,EAAE,EAAE,CADN;AAEE,YAAA,QAAQ,EAAC,IAFX;AAGE,YAAA,KAAK,EAAC,UAHR;AAAA,4BAKIF,GAAG,CAACG,IALR;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE,QAAC,MAAD,CAAQ,EAAR;AACE,YAAA,KAAK,EAAE,OADT;AAEE,YAAA,UAAU,EAAC,MAFb;AAGE,YAAA,QAAQ,EAAC,KAHX;AAIE,YAAA,QAAQ,EAAC,QAJX;AAKE,YAAA,YAAY,EAAC,UALf;AAME,YAAA,UAAU,EAAC,QANb;AAOE,YAAA,KAAK,EAAEH,GAAG,CAACE,KAPb;AAAA,sBASGF,GAAG,CAACE;AATP;AAAA;AAAA;AAAA;AAAA,kBARF,eAmBE,QAAC,MAAD,CAAQ,CAAR;AACE,YAAA,EAAE,EAAE,CADN;AAEE,YAAA,QAAQ,EAAC,IAFX;AAGE,YAAA,KAAK,EAAC,OAHR;AAAA,sBAKGF,GAAG,CAACI,KAAJ,KAAc,CAAd,GAAkB,aAAlB,GAAmC,GAAEJ,GAAG,CAACI,KAAM;AALlD;AAAA;AAAA;AAAA;AAAA,kBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eA4BE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBA5BF,eA6BE,QAAC,GAAD;AACE,UAAA,EAAE,EAAE,CADN;AAEE,UAAA,KAAK,EAAC,OAFR;AAAA,kCAIE,QAAC,IAAD;AAAM,YAAA,QAAQ,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE,QAAC,MAAD,CAAQ,EAAR;AAAW,YAAA,UAAU,EAAC,UAAtB;AAAiC,YAAA,QAAQ,EAAC,IAA1C;AAAA,sBACGJ,GAAG,CAACK;AADP;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AA6DD;KA9DeN,O","sourcesContent":["import * as React from \"react\";\n\nimport {\n  Box,\n  Divider,\n  Flex,\n  Image,\n  Text,\n  chakra,\n} from \"@chakra-ui/react\";\n\nimport { NftInfo } from \"../../../services/type\";\nimport cosmverseLogo from \"../../assets/cosmverse.jpg\";\n\ninterface NftCardProps {\n  readonly nft: NftInfo;\n}\n\nexport function NftCard({ nft }: NftCardProps): JSX.Element {\n  return (\n    <Flex\n      w=\"full\"\n      alignItems=\"center\"\n      justifyContent=\"center\"\n    >\n      <Box w=\"full\">\n        <Image\n          bgGradient=\"linear(to-r, green.200, pink.500)\"\n          roundedTop=\"lg\"\n          h={56}\n          w=\"full\"\n          fit=\"cover\"\n          src={nft.image}\n          fallbackSrc={cosmverseLogo}\n          alt={nft.title}\n        />\n        <Box px={4} bg=\"gray.500\" roundedBottom=\"md\">\n          <Box py={2}>\n            <chakra.p\n              mt={1}\n              fontSize=\"xs\"\n              color=\"gray.200\"\n            >\n              @{nft.user}\n            </chakra.p>\n            <chakra.h1\n              color={\"white\"}\n              fontWeight=\"bold\"\n              fontSize=\"2xl\"\n              overflow=\"hidden\"\n              textOverflow=\"ellipsis\"\n              whiteSpace=\"nowrap\"\n              title={nft.title}\n            >\n              {nft.title}\n            </chakra.h1>\n            <chakra.p\n              mt={1}\n              fontSize=\"xs\"\n              color=\"white\"\n            >\n              {nft.total === 1 ? \"One edition\" : `${nft.total} editions`}\n            </chakra.p>\n          </Box>\n          <Divider />\n          <Box\n            py={4}\n            color=\"white\"\n          >\n            <Text fontSize=\"xs\">\n              Price\n            </Text>\n            <chakra.h1 fontWeight=\"semibold\" fontSize=\"sm\">\n              {nft.price}\n            </chakra.h1>\n          </Box>\n        </Box>\n      </Box>\n    </Flex>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}