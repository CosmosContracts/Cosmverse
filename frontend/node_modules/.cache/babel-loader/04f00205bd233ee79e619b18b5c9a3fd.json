{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/pauloponciano/Documents/cosmverse/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/pauloponciano/Documents/cosmverse/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _createForOfIteratorHelper = require(\"/Users/pauloponciano/Documents/cosmverse/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MsgClientImpl = exports.MsgClearAdminResponse = exports.MsgClearAdmin = exports.MsgUpdateAdminResponse = exports.MsgUpdateAdmin = exports.MsgMigrateContractResponse = exports.MsgMigrateContract = exports.MsgExecuteContractResponse = exports.MsgExecuteContract = exports.MsgInstantiateContractResponse = exports.MsgInstantiateContract = exports.MsgStoreCodeResponse = exports.MsgStoreCode = exports.protobufPackage = void 0;\n/* eslint-disable */\n\nvar long_1 = __importDefault(require(\"long\"));\n\nvar minimal_1 = __importDefault(require(\"protobufjs/minimal\"));\n\nvar types_1 = require(\"../../../cosmwasm/wasm/v1beta1/types\");\n\nvar coin_1 = require(\"../../../cosmos/base/v1beta1/coin\");\n\nexports.protobufPackage = \"cosmwasm.wasm.v1beta1\";\nvar baseMsgStoreCode = {\n  sender: \"\",\n  source: \"\",\n  builder: \"\"\n};\nexports.MsgStoreCode = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.sender !== \"\") {\n      writer.uint32(10).string(message.sender);\n    }\n\n    if (message.wasmByteCode.length !== 0) {\n      writer.uint32(18).bytes(message.wasmByteCode);\n    }\n\n    if (message.source !== \"\") {\n      writer.uint32(26).string(message.source);\n    }\n\n    if (message.builder !== \"\") {\n      writer.uint32(34).string(message.builder);\n    }\n\n    if (message.instantiatePermission !== undefined) {\n      types_1.AccessConfig.encode(message.instantiatePermission, writer.uint32(42).fork()).ldelim();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgStoreCode);\n    message.wasmByteCode = new Uint8Array();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.sender = reader.string();\n          break;\n\n        case 2:\n          message.wasmByteCode = reader.bytes();\n          break;\n\n        case 3:\n          message.source = reader.string();\n          break;\n\n        case 4:\n          message.builder = reader.string();\n          break;\n\n        case 5:\n          message.instantiatePermission = types_1.AccessConfig.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseMsgStoreCode);\n    message.wasmByteCode = new Uint8Array();\n\n    if (object.sender !== undefined && object.sender !== null) {\n      message.sender = String(object.sender);\n    } else {\n      message.sender = \"\";\n    }\n\n    if (object.wasmByteCode !== undefined && object.wasmByteCode !== null) {\n      message.wasmByteCode = bytesFromBase64(object.wasmByteCode);\n    }\n\n    if (object.source !== undefined && object.source !== null) {\n      message.source = String(object.source);\n    } else {\n      message.source = \"\";\n    }\n\n    if (object.builder !== undefined && object.builder !== null) {\n      message.builder = String(object.builder);\n    } else {\n      message.builder = \"\";\n    }\n\n    if (object.instantiatePermission !== undefined && object.instantiatePermission !== null) {\n      message.instantiatePermission = types_1.AccessConfig.fromJSON(object.instantiatePermission);\n    } else {\n      message.instantiatePermission = undefined;\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.sender !== undefined && (obj.sender = message.sender);\n    message.wasmByteCode !== undefined && (obj.wasmByteCode = base64FromBytes(message.wasmByteCode !== undefined ? message.wasmByteCode : new Uint8Array()));\n    message.source !== undefined && (obj.source = message.source);\n    message.builder !== undefined && (obj.builder = message.builder);\n    message.instantiatePermission !== undefined && (obj.instantiatePermission = message.instantiatePermission ? types_1.AccessConfig.toJSON(message.instantiatePermission) : undefined);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseMsgStoreCode);\n\n    if (object.sender !== undefined && object.sender !== null) {\n      message.sender = object.sender;\n    } else {\n      message.sender = \"\";\n    }\n\n    if (object.wasmByteCode !== undefined && object.wasmByteCode !== null) {\n      message.wasmByteCode = object.wasmByteCode;\n    } else {\n      message.wasmByteCode = new Uint8Array();\n    }\n\n    if (object.source !== undefined && object.source !== null) {\n      message.source = object.source;\n    } else {\n      message.source = \"\";\n    }\n\n    if (object.builder !== undefined && object.builder !== null) {\n      message.builder = object.builder;\n    } else {\n      message.builder = \"\";\n    }\n\n    if (object.instantiatePermission !== undefined && object.instantiatePermission !== null) {\n      message.instantiatePermission = types_1.AccessConfig.fromPartial(object.instantiatePermission);\n    } else {\n      message.instantiatePermission = undefined;\n    }\n\n    return message;\n  }\n};\nvar baseMsgStoreCodeResponse = {\n  codeId: long_1.default.UZERO\n};\nexports.MsgStoreCodeResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (!message.codeId.isZero()) {\n      writer.uint32(8).uint64(message.codeId);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgStoreCodeResponse);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.codeId = reader.uint64();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseMsgStoreCodeResponse);\n\n    if (object.codeId !== undefined && object.codeId !== null) {\n      message.codeId = long_1.default.fromString(object.codeId);\n    } else {\n      message.codeId = long_1.default.UZERO;\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.codeId !== undefined && (obj.codeId = (message.codeId || long_1.default.UZERO).toString());\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseMsgStoreCodeResponse);\n\n    if (object.codeId !== undefined && object.codeId !== null) {\n      message.codeId = object.codeId;\n    } else {\n      message.codeId = long_1.default.UZERO;\n    }\n\n    return message;\n  }\n};\nvar baseMsgInstantiateContract = {\n  sender: \"\",\n  admin: \"\",\n  codeId: long_1.default.UZERO,\n  label: \"\"\n};\nexports.MsgInstantiateContract = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.sender !== \"\") {\n      writer.uint32(10).string(message.sender);\n    }\n\n    if (message.admin !== \"\") {\n      writer.uint32(18).string(message.admin);\n    }\n\n    if (!message.codeId.isZero()) {\n      writer.uint32(24).uint64(message.codeId);\n    }\n\n    if (message.label !== \"\") {\n      writer.uint32(34).string(message.label);\n    }\n\n    if (message.initMsg.length !== 0) {\n      writer.uint32(42).bytes(message.initMsg);\n    }\n\n    var _iterator = _createForOfIteratorHelper(message.funds),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var v = _step.value;\n        coin_1.Coin.encode(v, writer.uint32(50).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgInstantiateContract);\n    message.funds = [];\n    message.initMsg = new Uint8Array();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.sender = reader.string();\n          break;\n\n        case 2:\n          message.admin = reader.string();\n          break;\n\n        case 3:\n          message.codeId = reader.uint64();\n          break;\n\n        case 4:\n          message.label = reader.string();\n          break;\n\n        case 5:\n          message.initMsg = reader.bytes();\n          break;\n\n        case 6:\n          message.funds.push(coin_1.Coin.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseMsgInstantiateContract);\n    message.funds = [];\n    message.initMsg = new Uint8Array();\n\n    if (object.sender !== undefined && object.sender !== null) {\n      message.sender = String(object.sender);\n    } else {\n      message.sender = \"\";\n    }\n\n    if (object.admin !== undefined && object.admin !== null) {\n      message.admin = String(object.admin);\n    } else {\n      message.admin = \"\";\n    }\n\n    if (object.codeId !== undefined && object.codeId !== null) {\n      message.codeId = long_1.default.fromString(object.codeId);\n    } else {\n      message.codeId = long_1.default.UZERO;\n    }\n\n    if (object.label !== undefined && object.label !== null) {\n      message.label = String(object.label);\n    } else {\n      message.label = \"\";\n    }\n\n    if (object.initMsg !== undefined && object.initMsg !== null) {\n      message.initMsg = bytesFromBase64(object.initMsg);\n    }\n\n    if (object.funds !== undefined && object.funds !== null) {\n      var _iterator2 = _createForOfIteratorHelper(object.funds),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var e = _step2.value;\n          message.funds.push(coin_1.Coin.fromJSON(e));\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.sender !== undefined && (obj.sender = message.sender);\n    message.admin !== undefined && (obj.admin = message.admin);\n    message.codeId !== undefined && (obj.codeId = (message.codeId || long_1.default.UZERO).toString());\n    message.label !== undefined && (obj.label = message.label);\n    message.initMsg !== undefined && (obj.initMsg = base64FromBytes(message.initMsg !== undefined ? message.initMsg : new Uint8Array()));\n\n    if (message.funds) {\n      obj.funds = message.funds.map(function (e) {\n        return e ? coin_1.Coin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.funds = [];\n    }\n\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseMsgInstantiateContract);\n    message.funds = [];\n\n    if (object.sender !== undefined && object.sender !== null) {\n      message.sender = object.sender;\n    } else {\n      message.sender = \"\";\n    }\n\n    if (object.admin !== undefined && object.admin !== null) {\n      message.admin = object.admin;\n    } else {\n      message.admin = \"\";\n    }\n\n    if (object.codeId !== undefined && object.codeId !== null) {\n      message.codeId = object.codeId;\n    } else {\n      message.codeId = long_1.default.UZERO;\n    }\n\n    if (object.label !== undefined && object.label !== null) {\n      message.label = object.label;\n    } else {\n      message.label = \"\";\n    }\n\n    if (object.initMsg !== undefined && object.initMsg !== null) {\n      message.initMsg = object.initMsg;\n    } else {\n      message.initMsg = new Uint8Array();\n    }\n\n    if (object.funds !== undefined && object.funds !== null) {\n      var _iterator3 = _createForOfIteratorHelper(object.funds),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var e = _step3.value;\n          message.funds.push(coin_1.Coin.fromPartial(e));\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n\n    return message;\n  }\n};\nvar baseMsgInstantiateContractResponse = {\n  address: \"\"\n};\nexports.MsgInstantiateContractResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.address !== \"\") {\n      writer.uint32(10).string(message.address);\n    }\n\n    if (message.data.length !== 0) {\n      writer.uint32(18).bytes(message.data);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgInstantiateContractResponse);\n    message.data = new Uint8Array();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.address = reader.string();\n          break;\n\n        case 2:\n          message.data = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseMsgInstantiateContractResponse);\n    message.data = new Uint8Array();\n\n    if (object.address !== undefined && object.address !== null) {\n      message.address = String(object.address);\n    } else {\n      message.address = \"\";\n    }\n\n    if (object.data !== undefined && object.data !== null) {\n      message.data = bytesFromBase64(object.data);\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.address !== undefined && (obj.address = message.address);\n    message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseMsgInstantiateContractResponse);\n\n    if (object.address !== undefined && object.address !== null) {\n      message.address = object.address;\n    } else {\n      message.address = \"\";\n    }\n\n    if (object.data !== undefined && object.data !== null) {\n      message.data = object.data;\n    } else {\n      message.data = new Uint8Array();\n    }\n\n    return message;\n  }\n};\nvar baseMsgExecuteContract = {\n  sender: \"\",\n  contract: \"\"\n};\nexports.MsgExecuteContract = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.sender !== \"\") {\n      writer.uint32(10).string(message.sender);\n    }\n\n    if (message.contract !== \"\") {\n      writer.uint32(18).string(message.contract);\n    }\n\n    if (message.msg.length !== 0) {\n      writer.uint32(26).bytes(message.msg);\n    }\n\n    var _iterator4 = _createForOfIteratorHelper(message.funds),\n        _step4;\n\n    try {\n      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n        var v = _step4.value;\n        coin_1.Coin.encode(v, writer.uint32(42).fork()).ldelim();\n      }\n    } catch (err) {\n      _iterator4.e(err);\n    } finally {\n      _iterator4.f();\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgExecuteContract);\n    message.funds = [];\n    message.msg = new Uint8Array();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.sender = reader.string();\n          break;\n\n        case 2:\n          message.contract = reader.string();\n          break;\n\n        case 3:\n          message.msg = reader.bytes();\n          break;\n\n        case 5:\n          message.funds.push(coin_1.Coin.decode(reader, reader.uint32()));\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseMsgExecuteContract);\n    message.funds = [];\n    message.msg = new Uint8Array();\n\n    if (object.sender !== undefined && object.sender !== null) {\n      message.sender = String(object.sender);\n    } else {\n      message.sender = \"\";\n    }\n\n    if (object.contract !== undefined && object.contract !== null) {\n      message.contract = String(object.contract);\n    } else {\n      message.contract = \"\";\n    }\n\n    if (object.msg !== undefined && object.msg !== null) {\n      message.msg = bytesFromBase64(object.msg);\n    }\n\n    if (object.funds !== undefined && object.funds !== null) {\n      var _iterator5 = _createForOfIteratorHelper(object.funds),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var e = _step5.value;\n          message.funds.push(coin_1.Coin.fromJSON(e));\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.sender !== undefined && (obj.sender = message.sender);\n    message.contract !== undefined && (obj.contract = message.contract);\n    message.msg !== undefined && (obj.msg = base64FromBytes(message.msg !== undefined ? message.msg : new Uint8Array()));\n\n    if (message.funds) {\n      obj.funds = message.funds.map(function (e) {\n        return e ? coin_1.Coin.toJSON(e) : undefined;\n      });\n    } else {\n      obj.funds = [];\n    }\n\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseMsgExecuteContract);\n    message.funds = [];\n\n    if (object.sender !== undefined && object.sender !== null) {\n      message.sender = object.sender;\n    } else {\n      message.sender = \"\";\n    }\n\n    if (object.contract !== undefined && object.contract !== null) {\n      message.contract = object.contract;\n    } else {\n      message.contract = \"\";\n    }\n\n    if (object.msg !== undefined && object.msg !== null) {\n      message.msg = object.msg;\n    } else {\n      message.msg = new Uint8Array();\n    }\n\n    if (object.funds !== undefined && object.funds !== null) {\n      var _iterator6 = _createForOfIteratorHelper(object.funds),\n          _step6;\n\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var e = _step6.value;\n          message.funds.push(coin_1.Coin.fromPartial(e));\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n    }\n\n    return message;\n  }\n};\nvar baseMsgExecuteContractResponse = {};\nexports.MsgExecuteContractResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.data.length !== 0) {\n      writer.uint32(10).bytes(message.data);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgExecuteContractResponse);\n    message.data = new Uint8Array();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.data = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseMsgExecuteContractResponse);\n    message.data = new Uint8Array();\n\n    if (object.data !== undefined && object.data !== null) {\n      message.data = bytesFromBase64(object.data);\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseMsgExecuteContractResponse);\n\n    if (object.data !== undefined && object.data !== null) {\n      message.data = object.data;\n    } else {\n      message.data = new Uint8Array();\n    }\n\n    return message;\n  }\n};\nvar baseMsgMigrateContract = {\n  sender: \"\",\n  contract: \"\",\n  codeId: long_1.default.UZERO\n};\nexports.MsgMigrateContract = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.sender !== \"\") {\n      writer.uint32(10).string(message.sender);\n    }\n\n    if (message.contract !== \"\") {\n      writer.uint32(18).string(message.contract);\n    }\n\n    if (!message.codeId.isZero()) {\n      writer.uint32(24).uint64(message.codeId);\n    }\n\n    if (message.migrateMsg.length !== 0) {\n      writer.uint32(34).bytes(message.migrateMsg);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgMigrateContract);\n    message.migrateMsg = new Uint8Array();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.sender = reader.string();\n          break;\n\n        case 2:\n          message.contract = reader.string();\n          break;\n\n        case 3:\n          message.codeId = reader.uint64();\n          break;\n\n        case 4:\n          message.migrateMsg = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseMsgMigrateContract);\n    message.migrateMsg = new Uint8Array();\n\n    if (object.sender !== undefined && object.sender !== null) {\n      message.sender = String(object.sender);\n    } else {\n      message.sender = \"\";\n    }\n\n    if (object.contract !== undefined && object.contract !== null) {\n      message.contract = String(object.contract);\n    } else {\n      message.contract = \"\";\n    }\n\n    if (object.codeId !== undefined && object.codeId !== null) {\n      message.codeId = long_1.default.fromString(object.codeId);\n    } else {\n      message.codeId = long_1.default.UZERO;\n    }\n\n    if (object.migrateMsg !== undefined && object.migrateMsg !== null) {\n      message.migrateMsg = bytesFromBase64(object.migrateMsg);\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.sender !== undefined && (obj.sender = message.sender);\n    message.contract !== undefined && (obj.contract = message.contract);\n    message.codeId !== undefined && (obj.codeId = (message.codeId || long_1.default.UZERO).toString());\n    message.migrateMsg !== undefined && (obj.migrateMsg = base64FromBytes(message.migrateMsg !== undefined ? message.migrateMsg : new Uint8Array()));\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseMsgMigrateContract);\n\n    if (object.sender !== undefined && object.sender !== null) {\n      message.sender = object.sender;\n    } else {\n      message.sender = \"\";\n    }\n\n    if (object.contract !== undefined && object.contract !== null) {\n      message.contract = object.contract;\n    } else {\n      message.contract = \"\";\n    }\n\n    if (object.codeId !== undefined && object.codeId !== null) {\n      message.codeId = object.codeId;\n    } else {\n      message.codeId = long_1.default.UZERO;\n    }\n\n    if (object.migrateMsg !== undefined && object.migrateMsg !== null) {\n      message.migrateMsg = object.migrateMsg;\n    } else {\n      message.migrateMsg = new Uint8Array();\n    }\n\n    return message;\n  }\n};\nvar baseMsgMigrateContractResponse = {};\nexports.MsgMigrateContractResponse = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.data.length !== 0) {\n      writer.uint32(10).bytes(message.data);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgMigrateContractResponse);\n    message.data = new Uint8Array();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.data = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseMsgMigrateContractResponse);\n    message.data = new Uint8Array();\n\n    if (object.data !== undefined && object.data !== null) {\n      message.data = bytesFromBase64(object.data);\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.data !== undefined && (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseMsgMigrateContractResponse);\n\n    if (object.data !== undefined && object.data !== null) {\n      message.data = object.data;\n    } else {\n      message.data = new Uint8Array();\n    }\n\n    return message;\n  }\n};\nvar baseMsgUpdateAdmin = {\n  sender: \"\",\n  newAdmin: \"\",\n  contract: \"\"\n};\nexports.MsgUpdateAdmin = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.sender !== \"\") {\n      writer.uint32(10).string(message.sender);\n    }\n\n    if (message.newAdmin !== \"\") {\n      writer.uint32(18).string(message.newAdmin);\n    }\n\n    if (message.contract !== \"\") {\n      writer.uint32(26).string(message.contract);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgUpdateAdmin);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.sender = reader.string();\n          break;\n\n        case 2:\n          message.newAdmin = reader.string();\n          break;\n\n        case 3:\n          message.contract = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseMsgUpdateAdmin);\n\n    if (object.sender !== undefined && object.sender !== null) {\n      message.sender = String(object.sender);\n    } else {\n      message.sender = \"\";\n    }\n\n    if (object.newAdmin !== undefined && object.newAdmin !== null) {\n      message.newAdmin = String(object.newAdmin);\n    } else {\n      message.newAdmin = \"\";\n    }\n\n    if (object.contract !== undefined && object.contract !== null) {\n      message.contract = String(object.contract);\n    } else {\n      message.contract = \"\";\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.sender !== undefined && (obj.sender = message.sender);\n    message.newAdmin !== undefined && (obj.newAdmin = message.newAdmin);\n    message.contract !== undefined && (obj.contract = message.contract);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseMsgUpdateAdmin);\n\n    if (object.sender !== undefined && object.sender !== null) {\n      message.sender = object.sender;\n    } else {\n      message.sender = \"\";\n    }\n\n    if (object.newAdmin !== undefined && object.newAdmin !== null) {\n      message.newAdmin = object.newAdmin;\n    } else {\n      message.newAdmin = \"\";\n    }\n\n    if (object.contract !== undefined && object.contract !== null) {\n      message.contract = object.contract;\n    } else {\n      message.contract = \"\";\n    }\n\n    return message;\n  }\n};\nvar baseMsgUpdateAdminResponse = {};\nexports.MsgUpdateAdminResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgUpdateAdminResponse);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(_) {\n    var message = Object.assign({}, baseMsgUpdateAdminResponse);\n    return message;\n  },\n  toJSON: function toJSON(_) {\n    var obj = {};\n    return obj;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = Object.assign({}, baseMsgUpdateAdminResponse);\n    return message;\n  }\n};\nvar baseMsgClearAdmin = {\n  sender: \"\",\n  contract: \"\"\n};\nexports.MsgClearAdmin = {\n  encode: function encode(message) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n\n    if (message.sender !== \"\") {\n      writer.uint32(10).string(message.sender);\n    }\n\n    if (message.contract !== \"\") {\n      writer.uint32(26).string(message.contract);\n    }\n\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgClearAdmin);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.sender = reader.string();\n          break;\n\n        case 3:\n          message.contract = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(object) {\n    var message = Object.assign({}, baseMsgClearAdmin);\n\n    if (object.sender !== undefined && object.sender !== null) {\n      message.sender = String(object.sender);\n    } else {\n      message.sender = \"\";\n    }\n\n    if (object.contract !== undefined && object.contract !== null) {\n      message.contract = String(object.contract);\n    } else {\n      message.contract = \"\";\n    }\n\n    return message;\n  },\n  toJSON: function toJSON(message) {\n    var obj = {};\n    message.sender !== undefined && (obj.sender = message.sender);\n    message.contract !== undefined && (obj.contract = message.contract);\n    return obj;\n  },\n  fromPartial: function fromPartial(object) {\n    var message = Object.assign({}, baseMsgClearAdmin);\n\n    if (object.sender !== undefined && object.sender !== null) {\n      message.sender = object.sender;\n    } else {\n      message.sender = \"\";\n    }\n\n    if (object.contract !== undefined && object.contract !== null) {\n      message.contract = object.contract;\n    } else {\n      message.contract = \"\";\n    }\n\n    return message;\n  }\n};\nvar baseMsgClearAdminResponse = {};\nexports.MsgClearAdminResponse = {\n  encode: function encode(_) {\n    var writer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : minimal_1.default.Writer.create();\n    return writer;\n  },\n  decode: function decode(input, length) {\n    var reader = input instanceof minimal_1.default.Reader ? input : new minimal_1.default.Reader(input);\n    var end = length === undefined ? reader.len : reader.pos + length;\n    var message = Object.assign({}, baseMsgClearAdminResponse);\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  },\n  fromJSON: function fromJSON(_) {\n    var message = Object.assign({}, baseMsgClearAdminResponse);\n    return message;\n  },\n  toJSON: function toJSON(_) {\n    var obj = {};\n    return obj;\n  },\n  fromPartial: function fromPartial(_) {\n    var message = Object.assign({}, baseMsgClearAdminResponse);\n    return message;\n  }\n};\n\nvar MsgClientImpl = /*#__PURE__*/function () {\n  function MsgClientImpl(rpc) {\n    _classCallCheck(this, MsgClientImpl);\n\n    this.rpc = rpc;\n  }\n\n  _createClass(MsgClientImpl, [{\n    key: \"StoreCode\",\n    value: function StoreCode(request) {\n      var data = exports.MsgStoreCode.encode(request).finish();\n      var promise = this.rpc.request(\"cosmwasm.wasm.v1beta1.Msg\", \"StoreCode\", data);\n      return promise.then(function (data) {\n        return exports.MsgStoreCodeResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"InstantiateContract\",\n    value: function InstantiateContract(request) {\n      var data = exports.MsgInstantiateContract.encode(request).finish();\n      var promise = this.rpc.request(\"cosmwasm.wasm.v1beta1.Msg\", \"InstantiateContract\", data);\n      return promise.then(function (data) {\n        return exports.MsgInstantiateContractResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"ExecuteContract\",\n    value: function ExecuteContract(request) {\n      var data = exports.MsgExecuteContract.encode(request).finish();\n      var promise = this.rpc.request(\"cosmwasm.wasm.v1beta1.Msg\", \"ExecuteContract\", data);\n      return promise.then(function (data) {\n        return exports.MsgExecuteContractResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"MigrateContract\",\n    value: function MigrateContract(request) {\n      var data = exports.MsgMigrateContract.encode(request).finish();\n      var promise = this.rpc.request(\"cosmwasm.wasm.v1beta1.Msg\", \"MigrateContract\", data);\n      return promise.then(function (data) {\n        return exports.MsgMigrateContractResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"UpdateAdmin\",\n    value: function UpdateAdmin(request) {\n      var data = exports.MsgUpdateAdmin.encode(request).finish();\n      var promise = this.rpc.request(\"cosmwasm.wasm.v1beta1.Msg\", \"UpdateAdmin\", data);\n      return promise.then(function (data) {\n        return exports.MsgUpdateAdminResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }, {\n    key: \"ClearAdmin\",\n    value: function ClearAdmin(request) {\n      var data = exports.MsgClearAdmin.encode(request).finish();\n      var promise = this.rpc.request(\"cosmwasm.wasm.v1beta1.Msg\", \"ClearAdmin\", data);\n      return promise.then(function (data) {\n        return exports.MsgClearAdminResponse.decode(new minimal_1.default.Reader(data));\n      });\n    }\n  }]);\n\n  return MsgClientImpl;\n}();\n\nexports.MsgClientImpl = MsgClientImpl;\n\nvar globalThis = function () {\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  if (typeof self !== \"undefined\") return self;\n  if (typeof window !== \"undefined\") return window;\n  if (typeof global !== \"undefined\") return global;\n  throw \"Unable to locate global object\";\n}();\n\nvar atob = globalThis.atob || function (b64) {\n  return globalThis.Buffer.from(b64, \"base64\").toString(\"binary\");\n};\n\nfunction bytesFromBase64(b64) {\n  var bin = atob(b64);\n  var arr = new Uint8Array(bin.length);\n\n  for (var i = 0; i < bin.length; ++i) {\n    arr[i] = bin.charCodeAt(i);\n  }\n\n  return arr;\n}\n\nvar btoa = globalThis.btoa || function (bin) {\n  return globalThis.Buffer.from(bin, \"binary\").toString(\"base64\");\n};\n\nfunction base64FromBytes(arr) {\n  var bin = [];\n\n  for (var i = 0; i < arr.byteLength; ++i) {\n    bin.push(String.fromCharCode(arr[i]));\n  }\n\n  return btoa(bin.join(\"\"));\n}\n\nif (minimal_1.default.util.Long !== long_1.default) {\n  minimal_1.default.util.Long = long_1.default;\n  minimal_1.default.configure();\n}","map":null,"metadata":{},"sourceType":"script"}