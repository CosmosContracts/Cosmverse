{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cosmWasmTypes = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\n\nconst encoding_1 = require(\"@cosmjs/encoding\");\n\nconst long_1 = __importDefault(require(\"long\"));\n\nexports.cosmWasmTypes = {\n  \"/cosmwasm.wasm.v1beta1.MsgStoreCode\": {\n    aminoType: \"wasm/MsgStoreCode\",\n    toAmino: _ref => {\n      let {\n        sender,\n        wasmByteCode,\n        source,\n        builder\n      } = _ref;\n      return {\n        sender: sender,\n        wasm_byte_code: encoding_1.toBase64(wasmByteCode),\n        source: source,\n        builder: builder\n      };\n    },\n    fromAmino: _ref2 => {\n      let {\n        sender,\n        wasm_byte_code,\n        source,\n        builder\n      } = _ref2;\n      return {\n        sender: sender,\n        wasmByteCode: encoding_1.fromBase64(wasm_byte_code),\n        source: source,\n        builder: builder,\n        instantiatePermission: undefined\n      };\n    }\n  },\n  \"/cosmwasm.wasm.v1beta1.MsgInstantiateContract\": {\n    aminoType: \"wasm/MsgInstantiateContract\",\n    toAmino: _ref3 => {\n      let {\n        sender,\n        codeId,\n        label,\n        initMsg,\n        funds,\n        admin\n      } = _ref3;\n      return {\n        sender: sender,\n        code_id: codeId.toString(),\n        label: label,\n        init_msg: JSON.parse(encoding_1.fromUtf8(initMsg)),\n        funds: funds,\n        admin: admin !== null && admin !== void 0 ? admin : undefined\n      };\n    },\n    fromAmino: _ref4 => {\n      let {\n        sender,\n        code_id,\n        label,\n        init_msg,\n        funds,\n        admin\n      } = _ref4;\n      return {\n        sender: sender,\n        codeId: long_1.default.fromString(code_id),\n        label: label,\n        initMsg: encoding_1.toUtf8(JSON.stringify(init_msg)),\n        funds: [...funds],\n        admin: admin !== null && admin !== void 0 ? admin : \"\"\n      };\n    }\n  },\n  \"/cosmwasm.wasm.v1beta1.MsgUpdateAdmin\": {\n    aminoType: \"wasm/MsgUpdateAdmin\",\n    toAmino: _ref5 => {\n      let {\n        sender,\n        newAdmin,\n        contract\n      } = _ref5;\n      return {\n        sender: sender,\n        new_admin: newAdmin,\n        contract: contract\n      };\n    },\n    fromAmino: _ref6 => {\n      let {\n        sender,\n        new_admin,\n        contract\n      } = _ref6;\n      return {\n        sender: sender,\n        newAdmin: new_admin,\n        contract: contract\n      };\n    }\n  },\n  \"/cosmwasm.wasm.v1beta1.MsgClearAdmin\": {\n    aminoType: \"wasm/MsgClearAdmin\",\n    toAmino: _ref7 => {\n      let {\n        sender,\n        contract\n      } = _ref7;\n      return {\n        sender: sender,\n        contract: contract\n      };\n    },\n    fromAmino: _ref8 => {\n      let {\n        sender,\n        contract\n      } = _ref8;\n      return {\n        sender: sender,\n        contract: contract\n      };\n    }\n  },\n  \"/cosmwasm.wasm.v1beta1.MsgExecuteContract\": {\n    aminoType: \"wasm/MsgExecuteContract\",\n    toAmino: _ref9 => {\n      let {\n        sender,\n        contract,\n        msg,\n        funds\n      } = _ref9;\n      return {\n        sender: sender,\n        contract: contract,\n        msg: JSON.parse(encoding_1.fromUtf8(msg)),\n        funds: funds\n      };\n    },\n    fromAmino: _ref10 => {\n      let {\n        sender,\n        contract,\n        msg,\n        funds\n      } = _ref10;\n      return {\n        sender: sender,\n        contract: contract,\n        msg: encoding_1.toUtf8(JSON.stringify(msg)),\n        funds: [...funds]\n      };\n    }\n  },\n  \"/cosmwasm.wasm.v1beta1.MsgMigrateContract\": {\n    aminoType: \"wasm/MsgMigrateContract\",\n    toAmino: _ref11 => {\n      let {\n        sender,\n        contract,\n        codeId,\n        migrateMsg\n      } = _ref11;\n      return {\n        sender: sender,\n        contract: contract,\n        code_id: codeId.toString(),\n        msg: JSON.parse(encoding_1.fromUtf8(migrateMsg))\n      };\n    },\n    fromAmino: _ref12 => {\n      let {\n        sender,\n        contract,\n        code_id,\n        msg\n      } = _ref12;\n      return {\n        sender: sender,\n        contract: contract,\n        codeId: long_1.default.fromString(code_id),\n        migrateMsg: encoding_1.toUtf8(JSON.stringify(msg))\n      };\n    }\n  }\n};","map":{"version":3,"sources":["../src/aminotypes.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cosmWasmTypes = void 0;\n/* eslint-disable @typescript-eslint/naming-convention */\nconst encoding_1 = require(\"@cosmjs/encoding\");\nconst long_1 = __importDefault(require(\"long\"));\nexports.cosmWasmTypes = {\n    \"/cosmwasm.wasm.v1beta1.MsgStoreCode\": {\n        aminoType: \"wasm/MsgStoreCode\",\n        toAmino: ({ sender, wasmByteCode, source, builder }) => ({\n            sender: sender,\n            wasm_byte_code: encoding_1.toBase64(wasmByteCode),\n            source: source,\n            builder: builder,\n        }),\n        fromAmino: ({ sender, wasm_byte_code, source, builder }) => ({\n            sender: sender,\n            wasmByteCode: encoding_1.fromBase64(wasm_byte_code),\n            source: source,\n            builder: builder,\n            instantiatePermission: undefined,\n        }),\n    },\n    \"/cosmwasm.wasm.v1beta1.MsgInstantiateContract\": {\n        aminoType: \"wasm/MsgInstantiateContract\",\n        toAmino: ({ sender, codeId, label, initMsg, funds, admin, }) => ({\n            sender: sender,\n            code_id: codeId.toString(),\n            label: label,\n            init_msg: JSON.parse(encoding_1.fromUtf8(initMsg)),\n            funds: funds,\n            admin: admin !== null && admin !== void 0 ? admin : undefined,\n        }),\n        fromAmino: ({ sender, code_id, label, init_msg, funds, admin, }) => ({\n            sender: sender,\n            codeId: long_1.default.fromString(code_id),\n            label: label,\n            initMsg: encoding_1.toUtf8(JSON.stringify(init_msg)),\n            funds: [...funds],\n            admin: admin !== null && admin !== void 0 ? admin : \"\",\n        }),\n    },\n    \"/cosmwasm.wasm.v1beta1.MsgUpdateAdmin\": {\n        aminoType: \"wasm/MsgUpdateAdmin\",\n        toAmino: ({ sender, newAdmin, contract }) => ({\n            sender: sender,\n            new_admin: newAdmin,\n            contract: contract,\n        }),\n        fromAmino: ({ sender, new_admin, contract }) => ({\n            sender: sender,\n            newAdmin: new_admin,\n            contract: contract,\n        }),\n    },\n    \"/cosmwasm.wasm.v1beta1.MsgClearAdmin\": {\n        aminoType: \"wasm/MsgClearAdmin\",\n        toAmino: ({ sender, contract }) => ({\n            sender: sender,\n            contract: contract,\n        }),\n        fromAmino: ({ sender, contract }) => ({\n            sender: sender,\n            contract: contract,\n        }),\n    },\n    \"/cosmwasm.wasm.v1beta1.MsgExecuteContract\": {\n        aminoType: \"wasm/MsgExecuteContract\",\n        toAmino: ({ sender, contract, msg, funds }) => ({\n            sender: sender,\n            contract: contract,\n            msg: JSON.parse(encoding_1.fromUtf8(msg)),\n            funds: funds,\n        }),\n        fromAmino: ({ sender, contract, msg, funds }) => ({\n            sender: sender,\n            contract: contract,\n            msg: encoding_1.toUtf8(JSON.stringify(msg)),\n            funds: [...funds],\n        }),\n    },\n    \"/cosmwasm.wasm.v1beta1.MsgMigrateContract\": {\n        aminoType: \"wasm/MsgMigrateContract\",\n        toAmino: ({ sender, contract, codeId, migrateMsg, }) => ({\n            sender: sender,\n            contract: contract,\n            code_id: codeId.toString(),\n            msg: JSON.parse(encoding_1.fromUtf8(migrateMsg)),\n        }),\n        fromAmino: ({ sender, contract, code_id, msg, }) => ({\n            sender: sender,\n            contract: contract,\n            codeId: long_1.default.fromString(code_id),\n            migrateMsg: encoding_1.toUtf8(JSON.stringify(msg)),\n        }),\n    },\n};\n//# sourceMappingURL=aminotypes.js.map"]},"metadata":{},"sourceType":"script"}